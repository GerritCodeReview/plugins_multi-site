{
  "comments": [
    {
      "key": {
        "uuid": "5231d9be_7bf097f5",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 336,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "some trailing spaces throughout the docs",
      "range": {
        "startLine": 336,
        "startChar": 73,
        "endLine": 336,
        "endChar": 75
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c03576ba_f040b34d",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 336,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5231d9be_7bf097f5",
      "range": {
        "startLine": 336,
        "startChar": 73,
        "endLine": 336,
        "endChar": 75
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7f7f68d_fa67ca81",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 339,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "experienced",
      "range": {
        "startLine": 339,
        "startChar": 42,
        "endLine": 339,
        "endChar": 52
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2aa81e8_90d3e23d",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 339,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7f7f68d_fa67ca81",
      "range": {
        "startLine": 339,
        "startChar": 42,
        "endLine": 339,
        "endChar": 52
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4136f8b0_aa8e8c35",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "consider: [...] might occur more often when moving to stage #8 [...]",
      "range": {
        "startLine": 340,
        "startChar": 18,
        "endLine": 340,
        "endChar": 59
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e44406_814cbd38",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4136f8b0_aa8e8c35",
      "range": {
        "startLine": 340,
        "startChar": 18,
        "endLine": 340,
        "endChar": 59
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a717571e_feff01a6",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-05T15:33:41Z",
      "side": 1,
      "message": "\"when we have\"?",
      "range": {
        "startLine": 348,
        "startChar": 15,
        "endLine": 348,
        "endChar": 28
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4efa3745_23472be2",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a717571e_feff01a6",
      "range": {
        "startLine": 348,
        "startChar": 15,
        "endLine": 348,
        "endChar": 28
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "590f5779_078bed8f",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-05T16:28:32Z",
      "side": 1,
      "message": "In general we should prefer to write in the passive form i.e.: As can be seen...",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bf3ca5b_c4eff5a5",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "perhaps `same reference` would be more appropriate?",
      "range": {
        "startLine": 349,
        "startChar": 9,
        "endLine": 349,
        "endChar": 15
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcb5c130_e169681b",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3bf3ca5b_c4eff5a5",
      "range": {
        "startLine": 349,
        "startChar": 9,
        "endLine": 349,
        "endChar": 15
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffa49b7d_685b0b0b",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-05T15:33:41Z",
      "side": 1,
      "message": "pushes",
      "range": {
        "startLine": 353,
        "startChar": 19,
        "endLine": 353,
        "endChar": 26
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87afb491_a8335265",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ffa49b7d_685b0b0b",
      "range": {
        "startLine": 353,
        "startChar": 19,
        "endLine": 353,
        "endChar": 26
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "081fa9b8_7bdb32d5",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 361,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-05T15:33:41Z",
      "side": 1,
      "message": "pushes",
      "range": {
        "startLine": 361,
        "startChar": 19,
        "endLine": 361,
        "endChar": 26
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d11ceb70_3533a855",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 361,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "081fa9b8_7bdb32d5",
      "range": {
        "startLine": 361,
        "startChar": 19,
        "endLine": 361,
        "endChar": 26
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a399567_afe38e5c",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-05T16:28:32Z",
      "side": 1,
      "message": "How would you actually define a misalignment?\nWhat does it mean \"Missing W1\" in your drawing?\nI actually do not fully understand what W0, W1, W2, ... exactly mean in your drawings?\nAre they ref-updates? Are you referring to a non-fast-forward update when you write \"missing W1\"?\n\nWe need to stick to using the standard Git/Gerrit terminology as much as possible in order to\navoid misalignments in our discussions :-)",
      "range": {
        "startLine": 362,
        "startChar": 42,
        "endLine": 362,
        "endChar": 69
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8851f15e_2acc186c",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:57:38Z",
      "side": 1,
      "message": "Yeah, good point. Will try to clarify",
      "parentUuid": "9a399567_afe38e5c",
      "range": {
        "startLine": 362,
        "startChar": 42,
        "endLine": 362,
        "endChar": 69
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30416a97_26d82512",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-06T14:10:49Z",
      "side": 1,
      "message": "\u003e How would you actually define a misalignment?\n\nMisalignment with RefDirectory on the local git bare repo seen by Gerrit vs. a remote DfsRefDatabase, implemented on top of Zookeeper. \n\n\u003e What does it mean \"Missing W1\" in your drawing?\n\u003e I actually do not fully understand what W0, W1, W2, ... exactly mean in your drawings?\n\nI believe Stefano means SHA1 of ref-updates. W0 \u003d a Git write operation of a SHA1 bringing a repo/ref to a certain status.\n\n\u003e Are they ref-updates? Are you referring to a non-fast-forward update when you write \"missing W1\"?\n\nI believe Stefano refers to the error you get in JGit when you are asking for a SHA1 that doesn\u0027t exist (e.g. Missing Unknown).\n\n\u003e We need to stick to using the standard Git/Gerrit terminology as much as possible in order to\navoid misalignments in our discussions :-)\n\nAs long as we define at the beginning what \u0027W\u0027 means (status after a ref-update on a repo/ref) we should be good. The diagram would become a lot messy if we say \"status after a ref-update on a repo/ref #0\" all the times.",
      "parentUuid": "8851f15e_2acc186c",
      "range": {
        "startLine": 362,
        "startChar": 42,
        "endLine": 362,
        "endChar": 69
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72bcc088_7a9640cd",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-05T16:28:32Z",
      "side": 1,
      "message": "What if Instance2 crashes, with data loss, during the restart of the Instance1?",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e53001_e993403b",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:57:38Z",
      "side": 1,
      "message": "This is essentially the Split-Brain case just moved one ref-update further",
      "parentUuid": "72bcc088_7a9640cd",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dff2055b_8c4f50a6",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-06T14:10:49Z",
      "side": 1,
      "message": "I believe that the CAP theorem answers the question: you cannot have full consistency with full availability and maximum performance :-) For whatever trade-off is chosen, we cannot fall into a split-brain situation.\n\nExample-1: Maximum consistency\nIf any of the two nodes is down, Gerrit should refuse to respond to any incoming request because any answers could miss a bit of \"data lost\" in a sudden crash.\n\nExample-2: Maximum availability\nIf any of the two nodes is down, Gerrit should allow all operations, managing the \"delta of consistency\" to re-synch back when the other node is back up.\n\nExample-3: Maximum performance\nAny of two nodes serve any operation on specific repos, without bothering about sync between the two. They just \"federate\" into a unique view/URL.\n\nI believe we need to build a solution that is flexible enough to allow the user to decide the trade-offs between the three examples above.",
      "parentUuid": "91e53001_e993403b",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a996e27d_f8a20186",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-05T16:28:32Z",
      "side": 1,
      "message": "This implicates that synchronous replication can be avoided? What happens\nif an instance realizes that it is out of sync, but cannot bring itself back in sync\nbecause the other instance crashed and lost the data?",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f851a192_04b1e939",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:57:38Z",
      "side": 1,
      "message": "Good point. I will add that the two options are not exclusive.\nIn the case you mention what would happen is that the out of sync instance would operate in RO mode until it is put back in sync (this should be a manual operation possibly).",
      "parentUuid": "a996e27d_f8a20186",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f6100e_2becc184",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-06T14:10:49Z",
      "side": 1,
      "message": "@Saša your point is a valid one and it is still unresolved at this stage of multi-site.\nBear in mind that you mention \"instance\" whilst the design is about \"site\". Inside each site, you should have an high-availability setup, with definitely more than one instance of Gerrit.\n\nThis is well explained in the design, where we talk about \"site in USA\" and \"site in India\", where the two sites would have for sure plenty of nodes to assure high-availability.\n\nI still believe that even with just two sites, we have a huge benefit and is worth investing into it.\nIt is also a milestone to reach, and then to look at multiple sites with quorum, where the problem you\u0027re mentioning is less likely to happen.",
      "parentUuid": "f851a192_04b1e939",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9c07e13_6d6e4614",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-06T14:32:37Z",
      "side": 1,
      "message": "\u003e @Saša your point is a valid one and it is still unresolved at this stage of multi-site.\n\u003e Bear in mind that you mention \"instance\" whilst the design is about \"site\". Inside each site, you should have an high-availability setup, with definitely more than one instance of Gerrit.\n\nOK, thanks I will keep this terminology in mind :-)\nBtw, maybe our first target could be to add synchronous replication to the stage 5\n(single location - separate disks). This would protect from data loss in the RW master\nand provide a true hot standby replica. Of course, this wouldn\u0027t protect against\na disaster where the whole data center is lost.",
      "parentUuid": "b8f6100e_2becc184",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5dbe221_c04b1655",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "Redis and Memcached support compare and set too if we want to mention them.",
      "range": {
        "startLine": 399,
        "startChar": 40,
        "endLine": 399,
        "endChar": 85
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70462b6a_6b5dd8f9",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c5dbe221_c04b1655",
      "range": {
        "startLine": 399,
        "startChar": 40,
        "endLine": 399,
        "endChar": 85
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366a736f_34bde7b9",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-05T16:28:32Z",
      "side": 1,
      "message": "Having a shared RefDB is definitely an interesting idea. It would allow Gerrit instances to\nfind out that they are out of sync. More specifically, it would allow atomic ref-updates\nin a distributed system consisting of many Gerrit instances.\n\nI still think that this cannot eliminate the need to synchronously replicate current push\noperation to the majority of other Gerrit servers. If we do not do that, then the same\nquestion remains: what if the only instance who received a new commit crashes before any\nother instance realizes that it is missing that commit and pulls it to itself?",
      "range": {
        "startLine": 406,
        "startChar": 60,
        "endLine": 406,
        "endChar": 77
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e49f30a_23329dfe",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:57:38Z",
      "side": 1,
      "message": "Yes correct. I will mentions more clearly the synchronous mode",
      "parentUuid": "366a736f_34bde7b9",
      "range": {
        "startLine": 406,
        "startChar": 60,
        "endLine": 406,
        "endChar": 77
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d553d7f4_bc5513f4",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-06T14:10:49Z",
      "side": 1,
      "message": "I believe it is already answered above: it isn\u0027t a \"single instance\" but a full site.\nAnd yes, the synchronous replication and split-brain detection are not mutually exclusive at all: they could be both used effectively.\n\nThe DtfRefDatabase on Zookeeper (or other) isn\u0027t a new idea, it came from Dave Borowitz a few years ago :-)",
      "parentUuid": "4e49f30a_23329dfe",
      "range": {
        "startLine": 406,
        "startChar": 60,
        "endLine": 406,
        "endChar": 77
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1693b7a0_af711ad7",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "nit: reference instead of branch?",
      "range": {
        "startLine": 413,
        "startChar": 18,
        "endLine": 413,
        "endChar": 24
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3e0550e_1997757b",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1693b7a0_af711ad7",
      "range": {
        "startLine": 413,
        "startChar": 18,
        "endLine": 413,
        "endChar": 24
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2bf37c_c09a1c3e",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1065251
      },
      "writtenOn": "2019-03-05T15:33:41Z",
      "side": 1,
      "message": "If we shard the repositories across the various instances using some consistent hashing and make sure that each repo never \"write fallbacks\" into another box, that could solve the split brain issue and avoid a full cluster in read mode. \nHowever not sure if it\u0027s acceptable to have a few repos in just read mode (until the write instance comes back up for those repos)",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5f7df9a_dfcdc5d2",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "This is a valid point of discussion. Not sure How to put it in the document..",
      "parentUuid": "df2bf37c_c09a1c3e",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df7be7b6_a5d7b72e",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-06T14:10:49Z",
      "side": 1,
      "message": "You would never have a full cluster in real mode, ever. It is very unlikely that *all the branches* on *all the repos* were pushed *exactly at the same time* and *exactly before a catastrophic crash* isn\u0027t it? Possible yes, but not very likely to happen.\n\nEven if that was happening and the whole machine crashed exactly 1msec after the *big giant global push*, what alternatives can be put in place? The only machine that has the data is dead anyway.",
      "parentUuid": "c5f7df9a_dfcdc5d2",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d20841a_63ce14ea",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-05T15:36:48Z",
      "side": 1,
      "message": "it seems text got interrupted here, is that the case?",
      "range": {
        "startLine": 419,
        "startChar": 54,
        "endLine": 419,
        "endChar": 55
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90c7f3fd_e7822336",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-05T16:23:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7d20841a_63ce14ea",
      "range": {
        "startLine": 419,
        "startChar": 54,
        "endLine": 419,
        "endChar": 55
      },
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a3a64f_5bf82f94",
        "filename": "DESIGN.md",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-03-05T16:28:32Z",
      "side": 1,
      "message": "Unfinished sentence?",
      "revId": "afca907933b6385db6a526f4f51be5598531e5d8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}