{
  "comments": [
    {
      "key": {
        "uuid": "dd798654_48de8047",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2019-06-28T08:33:07Z",
      "side": 1,
      "message": "Test are failing because of this change, updateSharedDbOrThrowExceptionFor method is called after updating local ref so getLatestLocalRef in this place is going to return new object id exactly one which we are trying to insert to zk.",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10aa41c7_404832a9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-28T08:38:01Z",
      "side": 1,
      "message": "Oh, so the code was wrong and the test was wrong ... and we had a green build as a result :-(\n\nWill add that information on the bug raised on the issue tracker.",
      "parentUuid": "dd798654_48de8047",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d966fc_60bb0adf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-28T08:48:04Z",
      "side": 1,
      "message": "Oh, got your point now: because this is done *after* the update, then the local ref is of course NOT the one in Zookeeper.\n\nThe issue here is that:\n1) We can\u0027t use the one *before* the update because the update can go in multiple retry in case of concurrency.\n2) We can\u0027t use the one *after* because it would be different from the one we have in Zookeeper\n\nAny other idea?",
      "parentUuid": "10aa41c7_404832a9",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "984a9fb8_360a8058",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2019-06-28T09:11:27Z",
      "side": 1,
      "message": "What about remembering local ref before batch update then after batch invoke we can read local ref again, go backward by reading parent, update RefPair until we find local ref before update. I\u0027m afraid that this can have performance impact",
      "parentUuid": "77d966fc_60bb0adf",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9da678f_5d899bb5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2019-06-28T09:21:38Z",
      "side": 1,
      "message": "Or maybe is enough to store local ref before and compare and set only last commit from batch?",
      "parentUuid": "984a9fb8_360a8058",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f80ab37_6a44c1a5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-28T09:26:25Z",
      "side": 1,
      "message": "Not really, the batch could impact multiple refs also, you need to apply all of them.\n\nThe real problem is that we do not know which was the previous SHA1 because of the retry and concurrency involved with the updates.",
      "parentUuid": "b9da678f_5d899bb5",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "660999cd_0b898295",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2019-06-28T09:29:12Z",
      "side": 1,
      "message": "What about my previous comment? After batch updates we can read local ref and figure out previous SHA1 for commit in batch.",
      "parentUuid": "2f80ab37_6a44c1a5",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84bcac60_d83ec43d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-28T11:23:39Z",
      "side": 1,
      "message": "\u003e What about my previous comment? After batch updates we can read local ref and figure out previous SHA1 for commit in batch.\n\nWe could actually use the reflog for that, that\u0027s an interesting idea.",
      "parentUuid": "660999cd_0b898295",
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a3ad4e_7a43c13e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-28T11:30:09Z",
      "side": 1,
      "message": "This should return an updated RefPair with the latest value read from the ref-db",
      "range": {
        "startLine": 150,
        "startChar": 12,
        "endLine": 150,
        "endChar": 16
      },
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a3e95e_98e38133",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/RefUpdateValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-06-28T11:30:09Z",
      "side": 1,
      "message": "Should return a new updated RefPair",
      "range": {
        "startLine": 177,
        "startChar": 10,
        "endLine": 177,
        "endChar": 13
      },
      "revId": "0847fdcc9a058ceb7a068504a6ffe48d87a58368",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}