{
  "comments": [
    {
      "key": {
        "uuid": "9b576613_006cfff4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-10T15:09:50Z",
      "side": 1,
      "message": "tags?",
      "range": {
        "startLine": 7,
        "startChar": 42,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "0080ad3d08b72d6af87eacd74d2884ba4695bfe6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c40f57c_aaf83ed5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/validation/dfsrefdb/zookeeper/ZkSharedRefDatabase.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-10T15:09:08Z",
      "side": 1,
      "message": "Just put as:\n  ignoreRefInSharedDb(MoreObjects.firstNonNull(oldRef.getName(), newRef.getName()))\n\nThat would make sure that if they are not null, you just check the first, which is good because they would be identical anyway.\n\nIf one of them is null, then you just check the other.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 52,
        "endChar": 61
      },
      "revId": "0080ad3d08b72d6af87eacd74d2884ba4695bfe6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a87bfb91_d88bd970",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/validation/dfsrefdb/zookeeper/ZkSharedRefDatabaseTest.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-10T15:06:05Z",
      "side": 1,
      "message": "nullRef?",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 14
      },
      "revId": "0080ad3d08b72d6af87eacd74d2884ba4695bfe6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "138a93d7_e3b06815",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/validation/dfsrefdb/zookeeper/ZkSharedRefDatabaseTest.java",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-10T15:06:05Z",
      "side": 1,
      "message": "nullRef",
      "range": {
        "startLine": 203,
        "startChar": 50,
        "endLine": 203,
        "endChar": 76
      },
      "revId": "0080ad3d08b72d6af87eacd74d2884ba4695bfe6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2385f7c1_a4d1b9e1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/validation/dfsrefdb/zookeeper/ZkSharedRefDatabaseTest.java",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-10T15:06:05Z",
      "side": 1,
      "message": "How is this different than the one at L201? Just put a comment and rename the test to tell that it should always ignore draft comments, even if they are out of sequence.",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 206,
        "endChar": 96
      },
      "revId": "0080ad3d08b72d6af87eacd74d2884ba4695bfe6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}