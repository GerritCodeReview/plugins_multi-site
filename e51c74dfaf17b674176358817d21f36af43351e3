{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5789619d_fc585355",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T09:48:19Z",
      "side": 1,
      "message": "Do you need to add here an issue number?",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51e0fee4_a681c47f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 16,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T10:40:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5789619d_fc585355",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c44caf_8be178ed",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-06-06T09:12:33Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78087d5d_fa8b3553",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 165,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T10:07:53Z",
      "side": 1,
      "message": "how are you testing this?",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04ad09ff_9dae7f6e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 165,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T10:40:42Z",
      "side": 1,
      "message": "yeah, we\u0027re not, and we couldn\u0027t figure out a way of testing it. Open to any suggestions.\n\nCurrently I don\u0027t we test creation of metrics really, only counters.",
      "parentUuid": "78087d5d_fa8b3553",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ec384f6_ad351997",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 165,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T11:31:22Z",
      "side": 1,
      "message": "well, there is a new logic checking that is `lag \u003e 1` you create a metric so that needs to be tested.\nprobably you can add a unit test where metricMaker is a mock and you verify that the mock has been called with the right values whenever applies.\n\n(up to you) you could move the logic inside the if to a private method to make the code more idiomatic.",
      "parentUuid": "04ad09ff_9dae7f6e",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8f4acdf_d6eb8a85",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 165,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-06-06T22:53:27Z",
      "side": 1,
      "message": "IMHO spending a lot of efforts with complex and expensive to main mocks is way worse that having some code-paths manually tested.\n\n@Dani can you put a manual Verified +1 to indicate that you tested it manually and it works?",
      "parentUuid": "3ec384f6_ad351997",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8abfe9c2_6e946a24",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 169,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T10:11:48Z",
      "side": 1,
      "message": "In Java I use should use: i.e \n```\nString.format(\"Anonymous Basic Authentication for uri: %s\", targetUri)\n```\nto build strings.",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "971101db_a5c18a7e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 169,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T10:40:42Z",
      "side": 1,
      "message": "So, I\u0027m not 100% sure this makes sense here. Reading around apparently, `String.format` has bad performances while, when using `+` the compiler will internally create a String.builder, which apparently is much faster.\n\nI don\u0027t have a strong preference, but I currently don\u0027t see the value of changing this.",
      "parentUuid": "8abfe9c2_6e946a24",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b82923_9ac50f78",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 169,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T10:56:30Z",
      "side": 1,
      "message": "Interesting point what you raised. maybe java guru\u0027s can illustrate us.",
      "parentUuid": "971101db_a5c18a7e",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb0a0d9_67d8b3ad",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/ReplicationStatus.java",
        "patchSetId": 18
      },
      "lineNbr": 169,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-06-06T22:53:27Z",
      "side": 1,
      "message": "@Dani is right, especially when you have static constants like `SubscriberMetrics.REPLICATION_LAG_SEC` that are resolved at compile time. But also @Alvaro is right with regards to readability and this method isn\u0027t called 1000x times per second isn\u0027t it?\n\nSo, I\u0027d agree with @Alvaro in this case :-)",
      "parentUuid": "79b82923_9ac50f78",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfa369bb_e87d1b0e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-06-06T09:12:33Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac27fbea_30932cb4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 74,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T09:37:43Z",
      "side": 1,
      "message": "would it be better this to be an instance variable instead of a method variable? do you want to create it every time that you call the method?",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6dc2bd7_d318ac03",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 74,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T09:51:04Z",
      "side": 1,
      "message": "yes, as every time I want to start with an empty string and append characters to it.",
      "parentUuid": "ac27fbea_30932cb4",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e276dc8a_c630f424",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 74,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T09:52:08Z",
      "side": 1,
      "message": "I meant:\n```\n    Pattern isValidMetricNamePattern \u003d Pattern.compile(\"[a-zA-Z0-9_-]\");\n```",
      "parentUuid": "c6dc2bd7_d318ac03",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "283557e8_86907473",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 74,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T10:40:42Z",
      "side": 1,
      "message": "Good point, I could do that but then the method wouldn\u0027t be static anymore, and it would force me to instantiate a class of SubscriberMetrics when calling it, which arguably would be worse than recreating this metric every time.\n\nWhat do you think?",
      "parentUuid": "e276dc8a_c630f424",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88c59af6_26a93135",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 74,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T10:56:30Z",
      "side": 1,
      "message": "I am not an expert in java, would it work to make\"\n\n```\nprivate static Pattern isValidMetricNamePattern \u003d Pattern.compile(\"[a-zA-Z0-9_-]\");\n```\nin the class?",
      "parentUuid": "283557e8_86907473",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c007bb5a_673f7341",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 74,
      "author": {
        "id": 1155610
      },
      "writtenOn": "2023-06-06T11:07:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88c59af6_26a93135",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "112b2890_1003099d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 75,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T09:37:43Z",
      "side": 1,
      "message": "Do you need to iterate over all the characters? there is no a replace function in the java API where you can replace:\n- _ with __\n- . with _\n- / with _\n\n(If i am not wrong from your tests)",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6368417_ae2c6c75",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 75,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T09:51:04Z",
      "side": 1,
      "message": "In the tests I used the most common characters that aren\u0027t valid, but really it could be any character that isn\u0027t a uppercase or lowercase letter, _ or -\n\nWe also add the hex code of the character afther the _.\nI don\u0027t think there\u0027s a function in java that let\u0027s you replace the character with a function that takes the character as input?",
      "parentUuid": "112b2890_1003099d",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc7882bc_52f0cbfd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 75,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T10:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6368417_ae2c6c75",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e534aa7a_6a0f2b2d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 77,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T09:56:27Z",
      "side": 1,
      "message": "if you are already checking explicitly the underscore, why do you need it in the regular expression?",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "127175e0_f220bc68",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 77,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T10:02:13Z",
      "side": 1,
      "message": "maybe you could start simplifying the code with something like this:\n```\nfor (int i \u003d 0; i \u003c name.length(); i++) {  \n    Character c \u003d name.charAt(i);\n    Matcher matcher \u003d isValidMetricNamePattern.matcher(String.valueOf(c));\n    if (matcher.find())\n      if (c \u003d\u003d \u0027_\u0027)\n        sanitizedName.append(\"__\"); \n      else \n        sanitizedName.append(c);\n    else \n      sanitizedName.append(\"_\").append(Integer.toHexString((int) c));\n      \n  return sanitizedName.toString();\n}\n```",
      "parentUuid": "e534aa7a_6a0f2b2d",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38bd1f8e_0a90a202",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetrics.java",
        "patchSetId": 18
      },
      "lineNbr": 77,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T10:40:42Z",
      "side": 1,
      "message": "Good point, I\u0027ve gone with this solution, but for future reference I\u0027ll explain why I did it the other way.\n\nThe idea was to not compute the regex search if you don\u0027t need too, but you are right, then it\u0027s weird when the character is in the regex.\nI, however, didn\u0027t want to change the regex as that is the \"official\" regex from prometheus for a metric name validity, and I thought that changing it would cause other confusion.\n\nAnyway, I\u0027ve gone with your suggestion as it make sense and don\u0027t think my points really matter.",
      "parentUuid": "127175e0_f220bc68",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "936daf94_d6fe22c5",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetricsTest.java",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1022687
      },
      "writtenOn": "2023-06-06T09:12:33Z",
      "side": 1,
      "message": "Needs reformatting with GJF",
      "tag": "autogenerated:jenkins",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ff61988_52062a82",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetricsTest.java",
        "patchSetId": 18
      },
      "lineNbr": 187,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-06-06T09:37:43Z",
      "side": 1,
      "message": "Good. I like reading tests first and understand what you are trying to achieve.",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c59b6a1a_9b4302f3",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/consumer/SubscriberMetricsTest.java",
        "patchSetId": 18
      },
      "lineNbr": 187,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-06-06T09:51:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5ff61988_52062a82",
      "revId": "e51c74dfaf17b674176358817d21f36af43351e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}