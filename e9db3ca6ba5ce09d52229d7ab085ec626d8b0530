{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7a575005_1a3b7d3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-30T21:31:56Z",
      "side": 1,
      "message": "I believe that it should cover all the pain-points and I was able to start easily two instances of tests in parallel from the same dir on my laptop (CI should be happy once I figure out how to call it from `bazel`). As always feedback is welcomed.",
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ec694ad_f4a8df83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "By judging the number of comments and still open points, this should be more classified as a WIP IMHO. I\u0027ll leave you to decide though :-)",
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eced147_2efdf68b",
        "filename": "e2e-tests/README.md",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "That isn\u0027t true: how the \u0027bazel test\u0027 can execute this docker-compose? How can it get the exit status?",
      "range": {
        "startLine": 5,
        "startChar": 13,
        "endLine": 5,
        "endChar": 37
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3449e44c_a1e79956",
        "filename": "e2e-tests/README.md",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-31T08:15:07Z",
      "side": 1,
      "message": "I\u0027m in the process of adding a `sh_test` (see in [1]) rule to build and one will get the results of test by simply calling\n\nbazel test //plugins/multi-site/...\n\n[1] https://docs.bazel.build/versions/main/be/shell.html#sh_test",
      "parentUuid": "7eced147_2efdf68b",
      "range": {
        "startLine": 5,
        "startChar": 13,
        "endLine": 5,
        "endChar": 37
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b0d59f_2c3e6dc1",
        "filename": "e2e-tests/README.md",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2021-08-03T10:07:37Z",
      "side": 1,
      "message": "See my comment in e2e-tests/docker-compose-kafka-manual.yaml",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 26
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7b8e925_203b0559",
        "filename": "e2e-tests/docker-compose-kafka-manual.yaml",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "We cannot guarantee that port to be available.",
      "range": {
        "startLine": 5,
        "startChar": 9,
        "endLine": 5,
        "endChar": 13
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f4880e4_e54e3848",
        "filename": "e2e-tests/docker-compose-kafka-manual.yaml",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-31T08:13:02Z",
      "side": 1,
      "message": "all those *-manual.yaml are called only when `--manual true` switch is added to the call IOW it creates the necessary environment that one can use to develop test scenarios - I should have probably highlighted that more ;)",
      "parentUuid": "f7b8e925_203b0559",
      "range": {
        "startLine": 5,
        "startChar": 9,
        "endLine": 5,
        "endChar": 13
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e381d869_167236ff",
        "filename": "e2e-tests/docker-compose-kafka-manual.yaml",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2021-08-03T10:07:37Z",
      "side": 1,
      "message": "I think if we need the environment running locally, for any reason, among which developing test scenarios, we could use the local setup we currently have.\n\nI think this setup has to be focused solely on running tests in the CI. If we try to make it flexible to run it manually as well we are introducing more complexity that we need and we will end up with two local setup to maintain.",
      "parentUuid": "1f4880e4_e54e3848",
      "range": {
        "startLine": 5,
        "startChar": 9,
        "endLine": 5,
        "endChar": 13
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fde26a0_5fe522e4",
        "filename": "e2e-tests/docker-compose-manual.yaml",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "We cannot guarantee that port to be available.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 19
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b5bd280_4d311aca",
        "filename": "e2e-tests/docker-compose-manual.yaml",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "We cannot guarantee those ports to be available.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb50436c_1d170786",
        "filename": "e2e-tests/docker-compose-manual.yaml",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "We cannot guarantee those ports to be available.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e39b493_d806dc36",
        "filename": "e2e-tests/docker-compose.yaml",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-08-03T01:05:35Z",
      "side": 1,
      "message": "Why FAKE_NFS is still there?",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 20
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac0e0b92_038141a2",
        "filename": "e2e-tests/docker-tester.yaml",
        "patchSetId": 5
      },
      "lineNbr": 4,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-30T21:31:56Z",
      "side": 1,
      "message": "for the POC sake I\u0027m using the same image that is used for running gerrit but the most important parts are:\n* shared `.ssh` dir so that `admin` access to both instance is possible without extra steps\n* it has ssh, git, etc. already installed and ready to be used - obviously I can imagine using python, etc... and produce some report that is digestible by jenkins/zuul if we decide to go this way",
      "range": {
        "startLine": 4,
        "startChar": 4,
        "endLine": 4,
        "endChar": 50
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac873f3_d21ecaeb",
        "filename": "e2e-tests/docker-tester.yaml",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "This is actually an anti-pattern with docker-compose: you cannot really guarantee that it will be honoured.",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc3aee0d_345c55d2",
        "filename": "e2e-tests/docker-tester.yaml",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-31T08:13:02Z",
      "side": 1,
      "message": "AFAICT it is honoured - that was the reason to add `healthcheck` to `gerrit*` services...",
      "parentUuid": "4ac873f3_d21ecaeb",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "235ce0ee_95c8e718",
        "filename": "e2e-tests/scenarios.sh",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-30T21:31:56Z",
      "side": 1,
      "message": "this is the vey simple scenario that is bash based 😊 to give you an idea on how the tests could be performed and what is needed to have it up and running - don\u0027t judge the potential of the solution cuz of that ;)",
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fb08e32_7578b9b7",
        "filename": "e2e-tests/scenarios.sh",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "Why not simply configure the plugins as mandatory in gerrit.config? You won\u0027t need this script to test anything then: if Gerrit starts, then all plugins have been loaded.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7b5809e_3cca1300",
        "filename": "e2e-tests/scenarios.sh",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-31T08:13:02Z",
      "side": 1,
      "message": "+1 I could perform different test then e.g. create project (with SSH create-project command) in `gerrit1` and check if it was properly propagated to `gerrit2` etc... but lets agree if that makes sense to continue ;)",
      "parentUuid": "0fb08e32_7578b9b7",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51ef7cce_264d155e",
        "filename": "e2e-tests/test.sh",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-31T02:24:53Z",
      "side": 1,
      "message": "This can come with the version of Gerrit in the source tree.",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 22
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eda65f0_0c1275d0",
        "filename": "e2e-tests/test.sh",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-07-31T08:13:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "51ef7cce_264d155e",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 22
      },
      "revId": "e9db3ca6ba5ce09d52229d7ab085ec626d8b0530",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}