{
  "comments": [
    {
      "key": {
        "uuid": "70aea6dd_c7d3bc15",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/broker/BrokerPublisher.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-04-09T22:03:00Z",
      "side": 1,
      "message": "Why we can\u0027t check in the header against our own instance-id, to avoid relying on thread local?",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "18e190302f1fad0ab634c792bd3966b07d78f7f3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aa49c45_e6a7f170",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/broker/BrokerPublisher.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-09T22:05:54Z",
      "side": 1,
      "message": "Because this is the event that *we have generated* (publish side) not the one we have received.\n\nYes, the event we generate it could well come from message forwarded to use and thus received from a topic. However, that message is consumed and triggers other Gerrit events (e.g. stream events, indexing, cache evictions) and *those* ones should not re-published to the broker again, otherwise we generate an infinite cross loop of events on the networks.",
      "parentUuid": "70aea6dd_c7d3bc15",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "18e190302f1fad0ab634c792bd3966b07d78f7f3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbf425f5_97cc13c9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/broker/BrokerPublisher.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-04-09T22:20:12Z",
      "side": 1,
      "message": "Ok, so, once instance-id is a core gerrit feature we should be able to improve the situation.",
      "parentUuid": "8aa49c45_e6a7f170",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "18e190302f1fad0ab634c792bd3966b07d78f7f3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78a9f6bd_c33ef91c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/broker/BrokerPublisher.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-09T22:24:35Z",
      "side": 1,
      "message": "Exactly, possibly something for the Hackathon? Tiago will demo the multi-site, so we can make the case for introducing the instanceId :-)",
      "parentUuid": "bbf425f5_97cc13c9",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "18e190302f1fad0ab634c792bd3966b07d78f7f3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf7bcf8a_1a3bec61",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/broker/BrokerPublisher.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-09T22:32:49Z",
      "side": 1,
      "message": "If we introduce the InstanceId inside the execution context in Gerrit, then it gets propagate everywhere and we can inject the info as well into the stream events.\n\nThen when we consume events, we can simply check if was an event forwarded from somewhere else, and avoid re-processing it again.\n\nAs soon as Gerrit becomes more a series of multi-site microservices, we will need to track where things are getting created and consumed across the network. I\u0027m sure the Google guys have something similar.",
      "parentUuid": "78a9f6bd_c33ef91c",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "18e190302f1fad0ab634c792bd3966b07d78f7f3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}