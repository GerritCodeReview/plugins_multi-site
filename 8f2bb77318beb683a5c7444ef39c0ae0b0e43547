{
  "comments": [
    {
      "key": {
        "uuid": "eb82e70f_cb96e53c",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T13:07:49Z",
      "side": 1,
      "message": "This is not needed: all the tests are run serialized and do the proper drain of events.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 10
      },
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97eae5d8_3eff4a1a",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T15:16:33Z",
      "side": 1,
      "message": "In fact, the @Sandboxed wasn\u0027t needed but it was hiding a different problem in the logic of checking the refs/sequences/changes.",
      "parentUuid": "eb82e70f_cb96e53c",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 10
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03c72654_d4498367",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T11:42:19Z",
      "side": 1,
      "message": "Here we expects 4 elements, but then below we check only 3 of them. Which one is the last element we don\u0027t care about?",
      "range": {
        "startLine": 135,
        "startChar": 44,
        "endLine": 135,
        "endChar": 45
      },
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "801fbd4b_cabe1681",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T11:53:51Z",
      "side": 1,
      "message": "Found the culprit and also why you are setting @Sandboxed.\nIt looks like (need to double-check) that when the Gerrit server instance is shared across tests, it is always set to ReviewDb, regardless of the env or system property.",
      "parentUuid": "03c72654_d4498367",
      "range": {
        "startLine": 135,
        "startChar": 44,
        "endLine": 135,
        "endChar": 45
      },
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "615fbcf1_77dca73b",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T15:16:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "801fbd4b_cabe1681",
      "range": {
        "startLine": 135,
        "startChar": 44,
        "endLine": 135,
        "endChar": 45
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8af4ea56_f9fde15c",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T13:07:49Z",
      "side": 1,
      "message": "This is wrong, we should expect the ref-update of the \u0027/meta\u0027 ref also",
      "range": {
        "startLine": 156,
        "startChar": 29,
        "endLine": 156,
        "endChar": 94
      },
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4204101a_aaec51e1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/kafka/consumer/EventConsumerIT.java",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-12T15:16:33Z",
      "side": 1,
      "message": "refs/sequences/changes isn\u0027t updated 1:1 for every change created. There is actually a \"batch\" acquisition of changes numbers and the ref may or may not be updated.\n\nThe update of refs/sequences/changes isn\u0027t relevant also to our multi-site plugin, so we should just ignore it altogether and not include it in our assertions.",
      "parentUuid": "8af4ea56_f9fde15c",
      "range": {
        "startLine": 156,
        "startChar": 29,
        "endLine": 156,
        "endChar": 94
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "8f2bb77318beb683a5c7444ef39c0ae0b0e43547",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}