{
  "comments": [
    {
      "key": {
        "uuid": "f6f2fd7b_16694342",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-28T09:22:03Z",
      "side": 1,
      "message": "@Dave: this change to auto-value has actually changed the JSON output of stream events. Is this intentional?",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b636d1fc_7724dd2f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-04-29T15:07:34Z",
      "side": 1,
      "message": "No, this is an unintended side effect of changing the method name. I stand by my choice of public method names, but I suppose this means we need to use the old name for the package-private name.",
      "parentUuid": "f6f2fd7b_16694342",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e8475e8_05e38dc2",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-29T15:09:16Z",
      "side": 1,
      "message": "\u003e No, this is an unintended side effect of changing the method name. I stand by my choice of public method names, but I suppose this means we need to use the old name for the package-private name.\n\nAs long as we document the change, I have no problem with that :-)",
      "parentUuid": "b636d1fc_7724dd2f",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10b7b5aa_ae90e56d",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-04-29T15:12:20Z",
      "side": 1,
      "message": "Sorry, what is the thing you have no problem with?\n\nI\u0027m saying that it seems like plugins or other downstream tooling are depending on the exact JSON object format. What is checked into master now is a regression in that it changed the JSON object format. What I was proposing is keeping the JSON object format the same.\n\nBut the broader question is: do we have any stability guarantees about the JSON object format in stream-events?",
      "parentUuid": "6e8475e8_05e38dc2",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9b8dddf_923c1269",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-04-29T15:21:46Z",
      "side": 1,
      "message": "\u003e Sorry, what is the thing you have no problem with?\n\nWe have no issues in accepting a different JSON format. This test just detected the change, but we do not make any JSON specific processing with it: just de-serialize it and load it back into a Java object.\n\n\u003e I\u0027m saying that it seems like plugins or other downstream tooling are depending on the exact JSON object format. \n\nThat is for sure, specifically the integrations with CI systems, but it could be even more.\nThe stream events can be consumed in three ways:\n- SSH command gerrit stream-events\n- WebHooks that are pushing the individual JSON events to other services\n- Other channels (Kafka, RabbitMQ)\n\nThe Jenkins integration for sure will need to be aware of the change and manage different de-serializers depending to which Gerrit versions are they talking to.\n\n\u003e What is checked into master now is a regression in that it changed the JSON object format. What I was proposing is keeping the JSON object format the same.\n\nThat is fine also, even better because it will keep existing CI integrations working.\n\n\u003e But the broader question is: do we have any stability guarantees about the JSON object format in stream-events?\n\nAt the moment NO, because we don\u0027t have enough tests on it.\n\nWe should:\na) Document the format\nb) Put acceptance tests in place on the format",
      "parentUuid": "10b7b5aa_ae90e56d",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a783ff9_db0366cd",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-04-29T18:21:45Z",
      "side": 1,
      "message": "Ok, so you\u0027re saying _this plugin_ doesn\u0027t care about the specific format, but in general we as a project should care. I agree, and that\u0027s the direction I\u0027m moving with https://gerrit-review.googlesource.com/q/topic:%22event-json-tests%22+(status:open%20OR%20status:merged)",
      "parentUuid": "f9b8dddf_923c1269",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a678584c_4f5e5e76",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/broker/kafka/BrokerPublisherTest.java",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-01T22:17:39Z",
      "side": 1,
      "message": "Thanks Dave for fixing this in master, multi-site is back on track now :-)",
      "parentUuid": "4a783ff9_db0366cd",
      "range": {
        "startLine": 130,
        "startChar": 36,
        "endLine": 130,
        "endChar": 39
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8e4d739_7de167a7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/forwarder/GsonParserTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-05-01T08:36:44Z",
      "side": 1,
      "message": "I had to ignore these tests. Why are they needed? Do we really use Account.Id in event classes?",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c81a182a_020a5808",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/forwarder/GsonParserTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-01T16:15:59Z",
      "side": 1,
      "message": "\u003e I had to ignore these tests. Why are they needed? Do we really use Account.Id in event classes?\n\nThey check that we are able to serialize/deserialize accounts and groups, because the plugin uses them for accounts and group cache invalidation.\n\nWhy are you disabling them? If they don\u0027t work, the plugin doesn\u0027t work either :-(",
      "parentUuid": "c8e4d739_7de167a7",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4edd51f5_31ec8287",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/forwarder/GsonParserTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-01T20:21:13Z",
      "side": 1,
      "message": "I am checking which parts of the code would be broken, and I believe you are right: they do not seem to be used anymore, apart from tests :-D",
      "parentUuid": "c81a182a_020a5808",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "225717ae_9e61fdb1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/forwarder/GsonParserTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-01T20:42:33Z",
      "side": 1,
      "message": "I am wrong, they are actually used when decoding the incoming message of cache evictions. Let me adapt the deserializer to use the auto-value instantiation by hand.",
      "parentUuid": "4edd51f5_31ec8287",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75ef8166_e87d22c1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/forwarder/GsonParserTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-05-01T21:06:29Z",
      "side": 1,
      "message": "Yes, you are right, and I totally forgot this fact. CacheEvictionEvent is a single event that can trasport different caches and keys. cache name is a string and cache key is object that can contain Account.Id.\n\nRight now Account.Id was migrated to AutoValue and we don\u0027t have TypeAdapter for it, mainly because in event classes in Gerrit core always integer type is used to transport account id information.\n\nI think we have a number of potential fixes here:\n\n* 1. We try to tweak the deserialize to understand Account.Id in this and other plugins (high-availability plugin would also be affected by this problem)\n* 2. Split the generic CacheEvictionEvent to dedicated events: AccountCacheEvictionEvent and friends and use dedicated type for the id, e.g.: integer.\n* 3. Extend EventGson in gerrit core and add Account.Id and other classes that are used by the plugins. However, we usually don\u0027t do this, putting something in gerrit core that is only needed by gerrit plugins.",
      "parentUuid": "225717ae_9e61fdb1",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1addc23f_c26a0cf0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/forwarder/GsonParserTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-05-01T21:46:16Z",
      "side": 1,
      "message": "\u003e Yes, you are right, and I totally forgot this fact. CacheEvictionEvent is a single event that can trasport different caches and keys. cache name is a string and cache key is object that can contain Account.Id.\n\u003e \n\u003e Right now Account.Id was migrated to AutoValue and we don\u0027t have TypeAdapter for it, mainly because in event classes in Gerrit core always integer type is used to transport account id information.\n\nYes, exactly.\n\n\u003e \n\u003e I think we have a number of potential fixes here:\n\u003e \n\u003e * 1. We try to tweak the deserialize to understand Account.Id in this and other plugins (high-availability plugin would also be affected by this problem)\n\nNope, I would like to keep in the plugin the logic of the plugin, not in Gerrit.\n\n\u003e * 2. Split the generic CacheEvictionEvent to dedicated events: AccountCacheEvictionEvent and friends and use dedicated type for the id, e.g.: integer.\n\nThere is already a single event with a switch/case inside. I\u0027m reusing at the moment that one and, as follow-up, yes we can event more dedicated events per cache.\n\n\u003e * 3. Extend EventGson in gerrit core and add Account.Id and other classes that are used by the plugins. However, we usually don\u0027t do this, putting something in gerrit core that is only needed by gerrit plugins.\n\nNope, it would be subject to removal in the future because it is unused.\n\nP.S. The PS10 works :-) can you have a look?",
      "parentUuid": "75ef8166_e87d22c1",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "8f1684e8110abbb35eee94e673f4934f0fcd04aa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}