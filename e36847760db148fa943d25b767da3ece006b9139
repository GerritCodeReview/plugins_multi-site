{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f4b1509a_70b8f51f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2021-06-03T10:12:53Z",
      "side": 1,
      "message": "Why is the problem in 3.3 only ? Should it go in 3.2?",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e13ef611_b301ab8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-05T01:46:47Z",
      "side": 1,
      "message": "The bug is raised against v3.4, but this is fix is on v3.3 where the problem does not occur.\nI found actually a bug but it is in the test. The code looks good to me.\n\nLet me try to reproduce on stable-3.4 instead.",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1cc6e76_daa75ea0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-06-05T09:04:37Z",
      "side": 1,
      "message": "there is a bug in stable-3.3. setup local environment, create project with / in the name and change the description. You will see desesialisation issue. It\u0027s because it\u0027s in the switch we have special case for projects and before it was handled in default section",
      "parentUuid": "e13ef611_b301ab8f",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8786cc2e_de7f950b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-05T09:15:25Z",
      "side": 1,
      "message": "I\u0027ve tested it locally on stable-3.3 and it works for me, but it doesn\u0027t on stable-3.4.",
      "parentUuid": "b1cc6e76_daa75ea0",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fce7e14a_17beff7b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/forwarder/CacheKeyJsonParser.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-06-03T11:14:00Z",
      "side": 1,
      "message": "isn\u0027t this going to remove the slash from the json altogether?\n\nHow are we going to distinguish cache evictions for `foo/bar` from cache evictions for `foobar`?",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6865f3_3fbc39a6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/forwarder/CacheKeyJsonParser.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-06-03T13:08:32Z",
      "side": 1,
      "message": "Sorry, I just realized we are not stripping \"/\", but double quotes \".\nI am going to try to understand why.",
      "parentUuid": "fce7e14a_17beff7b",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c36d364_85447421",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/forwarder/CacheKeyJsonParser.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2021-06-03T13:21:03Z",
      "side": 1,
      "message": "I was trying to figure out the same. Looking at the tests, it doesn\u0027t seem like we are using a project containing double quotes, hence there is a discrepancy between the tests and the fix itself.\n\nCan a project have double quotes in the name? I don\u0027t think Gerrit would allow it.\n\nFurthermore, is it safe to assume that the Constants.PROJECTS case always receive a String? If so, we could even simplify this logic, the final serialization could be: `Project.nameKey(nullToEmpty(json))`",
      "parentUuid": "9b6865f3_3fbc39a6",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c62577c_e5daa33b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/multisite/forwarder/CacheKeyJsonParser.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-06-03T13:43:15Z",
      "side": 1,
      "message": "Issue is that json is a serialised string and Gson serialiser always adding quotes so if we do Gson.toJson(Project.nameKey(\"foo\")) string will look like this: \"\"foo\"\". Because it\u0027s not a valid Json we cannot deserialise it using Gson.fromJson(json) but we just cast it to string. But with casting we will still have quotes.",
      "parentUuid": "9b6865f3_3fbc39a6",
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39e535d9_45251818",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/event/CacheEvictionEventRouterTest.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-05T01:46:47Z",
      "side": 1,
      "message": "This test is wrong: we do not send a plain string but rather we delegate the EventGson to the serialisation of a project object.\n\nThe correct form is done in the ForwardedCacheEvictionHandlerIT.java:126\n\n  @Test\n  public void shouldEvictProjectCache() throws Exception {\n    objectUnderTest.route(\n        new CacheEvictionEvent(ProjectCacheImpl.CACHE_NAME, gson.toJson(project)));\n    evictionsCacheTracker.waitForExpectedEvictions();\n\n    assertThat(evictionsCacheTracker.trackedEvictionsFor(ProjectCacheImpl.CACHE_NAME))\n        .contains(project);\n  }\n  \nYou are assuming what the EventGson would do, without using the real object.",
      "range": {
        "startLine": 64,
        "startChar": 80,
        "endLine": 64,
        "endChar": 94
      },
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "657b02cd_5dd66e2e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/multisite/event/CacheEvictionEventRouterTest.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-06-07T06:14:25Z",
      "side": 1,
      "message": "I\u0027ve tested with local setup and actually I have issue in other tests. If we use gson.toJson(project) extra quotes will be added e.g: \"\"some/project\"\" that\u0027s why I have this extra code to remove them. But in real file we are getting: \"some/project\", it\u0027s because we are deserialising json to Event object so extra quotes are already removed, then we are passing it one more time to our CacheKeyJsonParser - gsonParser.fromJson(cacheEvictionEvent.cacheName, cacheEvictionEvent.key);. I will remove this extra functionality and use string instead of Gson",
      "parentUuid": "39e535d9_45251818",
      "range": {
        "startLine": 64,
        "startChar": 80,
        "endLine": 64,
        "endChar": 94
      },
      "revId": "e36847760db148fa943d25b767da3ece006b9139",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}